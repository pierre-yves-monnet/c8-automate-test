name: 'sm-deploy-bpmn'

on:
  push:
    paths:
      - 'src/main/resources/*.bpmn'
      - 'src/main/resources/*.dmn'
      - 'src/main/resources/*.form'


jobs:
  prepare-files:
    runs-on: ubuntu-latest
    outputs:
      matrix-modified: ${{ steps.file-changes.outputs.files }}
    steps:
      - name: Select added and changed resources to deploy
        uses: yumemi-inc/changed-files@v3
        id: file-changes
        with:
          statuses: added|modified
          format: 'json'
          patterns: |
            src/main/resources/*.{bpmn,dmn,form}

  deploy-modified-files:
    if: ${{ needs.prepare-files.outputs.matrix-modified != '[]' }}
    needs: [prepare-files]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJSON(needs.prepare-files.outputs.matrix-modified) }}
    steps:
      - name: Check Out Reference File
        uses: Bhacaz/checkout-files@v2
        with:
          files: ${{ matrix.file }}

      - name: Display files to deploy
        run: |
          echo file[${{ matrix.file }}] from workspace[${{ github.workspace }}] # to verify if the correct file was passed          
          ls -al ${{ github.workspace }}/${{ matrix.file }}

# cluster with Identity + Client Secret/ClientID
      - name: Get Bearer Token
        id: get-bearer-token
        run: |
          echo "TokenURL:" ${{secrets.OAUTH_TOKEN_URL}} | sed 's/./& /g' 
          echo "ClientId:" ${{secrets.ZEEBE_CLIENT_ID}} | sed 's/./& /g' 
          secretDisplay=$(echo "${{ secrets.ZEEBE_CLIENT_SECRET }}" | sed -n 's/^\(...\).*/\1/p')
          echo "ClientSecret:" $secretDisplay            
          token=$(curl -s ""${{ secrets.OAUTH_TOKEN_URL }}"" --header 'Content-Type: application/x-www-form-urlencoded' --data-urlencode 'grant_type=client_credentials' --data-urlencode "client_id=${{ secrets.ZEEBE_CLIENT_ID }}" --data-urlencode "client_secret=${{ secrets.ZEEBE_CLIENT_SECRET }}" --data-urlencode 'audience=zeebe.camunda.io' | jq -r '.access_token')
          tokenDisplay=$(echo $token | sed -n 's/^\(...........\).*/\1/p') 
          echo "Token:" $tokenDisplay
          echo "token=$token" >> $GITHUB_OUTPUT

      - name: Deploy to Zeebe
        id: deploy-to-zeebe
        run: |
               echo "Server:" ${{secrets.ZEEBE_REST_ADDRESS}} | sed 's/./& /g' 
               STATUS=$(curl -s -o response.txt -w "%{http_code}" -X POST "${{ secrets.ZEEBE_REST_ADDRESS }}/v2/deployments" -H "Authorization: Bearer ${{ steps.get-bearer-token.outputs.token }}"  -F "resources=@${{ github.workspace }}/${{ matrix.file }}")
               echo "HTTP Status: $STATUS"
               
               if [[ "$STATUS" -ge 400 ]]; then
               echo "❌ API call failed with status $STATUS"
               cat response.txt
               exit 1
               fi

# Cluster with no Identity or no ClientSecret/ClientID
#      - name: Deploy to Zeebe
#        run: |
#          echo "Server:" ${{secrets.ZEEBE_REST_ADDRESS}} | sed 's/./& /g'
#          STATUS=$(curl -s -o response.txt -w "%{http_code}" -X POST "${{ secrets.ZEEBE_REST_ADDRESS }}/v2/deployments" -F "resources=@${{ github.workspace }}/${{ matrix.file }}")
#          echo "HTTP Status: $STATUS"
#
#          if [[ "$STATUS" -ge 400 ]]; then
#            echo "❌ API call failed with status $STATUS"
#            cat response.txt
#            exit 1
#          fi
